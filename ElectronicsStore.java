// üìå –ü–æ–¥—É–º–∞—Ç—å –Ω–∞–¥ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∫–ª–∞—Å—Å–∞ –ù–æ—É—Ç–±—É–∫ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ —Ç–µ—Ö–Ω–∏–∫–∏ - –≤—ã–¥–µ–ª–∏—Ç—å –ø–æ–ª—è –∏
// –º–µ—Ç–æ–¥—ã. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ java.
// üìå –°–æ–∑–¥–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–æ—É—Ç–±—É–∫–æ–≤.
// üìå –ù–∞–ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫—Ä–∏—Ç–µ—Ä–∏–π (–∏–ª–∏ –∫—Ä–∏—Ç–µ—Ä–∏–∏)
// —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—ã–≤–µ–¥–µ—Ç –Ω–æ—É—Ç–±—É–∫–∏, –æ—Ç–≤–µ—á–∞—é—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—É. –ö—Ä–∏—Ç–µ—Ä–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ
// —Ö—Ä–∞–Ω–∏—Ç—å –≤ Map. –ù–∞–ø—Ä–∏–º–µ—Ä:
// ‚Äú–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é:
// 1 - –û–ó–£
// 2 - –û–±—ä–µ–º –ñ–î
// 3 - –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞
// 4 - –¶–≤–µ—Ç ‚Ä¶
// üìå –î–∞–ª–µ–µ –Ω—É–∂–Ω–æ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤ - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
// –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –≤ Map.
// üìå –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –Ω–æ—É—Ç–±—É–∫–∏ –∏—Ö –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–æ—Ö–æ–¥—è—â–∏–µ –ø–æ
// —É—Å–ª–æ–≤–∏—è–º.

import java.util.Arrays;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class ElectronicsStore {
    public static void main(String[] args) {
        Notebook nb1 = new Notebook(2, 512, "Windows", 15);
        Notebook nb2 = new Notebook(4, 1024, "macOS", 17);
        Notebook nb3 = new Notebook(8, 1024, "Linux", 19);
        Notebook nb4 = new Notebook(16, 512, "Windows", 15);
        Notebook nb5 = new Notebook(32, 128, "macOS", 15);
        Notebook nb6 = new Notebook(64, 2048, "Windows", 17);
        Set<Notebook> noteboks = new HashSet(Arrays.asList(nb1, nb2, nb3, nb4, nb5, nb6));

        try {
            System.out.println("–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é:\r\n" +
                    " 1 - –û–±—å–µ–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏(–≤ –ì–±)\r\n" +
                    " 2 - –û–±—ä–µ–º –∂–µ—Å—Ç–∫–æ–≥–æ –¥–∏—Å–∫–∞(–≤ –ì–±)\r\n" +
                    " 3 - –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\r\n" +
                    " 4 - –î–∏–∞–≥–æ–Ω–∞–ª—å –º–æ–Ω–∏—Ç–æ—Ä–∞(–≤ –¥—é–π–º–∞—Ö)");
            Scanner scn = new Scanner(System.in);
            String choice = scn.next();

            switch (choice) {
                case "1":
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—å–µ–º –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏: ");
                    choice = scn.next();
                    for (Notebook notebook : noteboks) {
                        if (notebook.amountOfRAM >= Integer.parseInt(choice)) {
                            System.out.println(notebook);
                        }
                    }
                    scn.close();
                    break;

                case "2":
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ–±—å–µ–º –∂–µ—Å—Ç–∫–æ–≥–æ –¥–∏—Å–∫–∞: ");
                    choice = scn.next();
                    for (Notebook notebook : noteboks) {
                        if (notebook.sizeOfHardDrive >= Integer.parseInt(choice)) {
                            System.out.println(notebook);
                        }
                    }
                    scn.close();
                    break;

                case "3":
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä—É, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–º—É –∫—Ä–∏—Ç–µ—Ä–∏—é : \r\n" +
                            " 1 - Windows \r\n" +
                            " 2 - macOS \r\n" +
                            " 3 - Linux");
                    choice = scn.next();
                    switch (choice) {
                        case "1":
                            for (Notebook notebook : noteboks) {
                                if (notebook.operatingSysytem.equals("Windows")) {
                                    System.out.println(notebook);
                                }
                            }
                            scn.close();
                            break;
                        case "2":
                            for (Notebook notebook : noteboks) {
                                if (notebook.operatingSysytem.equals("macOS")) {
                                    System.out.println(notebook);
                                }
                            }
                            scn.close();
                            break;    
                        case "3":
                            for (Notebook notebook : noteboks) {
                                if (notebook.operatingSysytem.equals("Linux")) {
                                    System.out.println(notebook);
                                }
                            }
                            scn.close();
                            break;
                        default:
                        scn.close();
                            break;
                    }
                    break;

                case "4":
                    System.out.println("–í–≤–µ–¥–∏—Ç–µ –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω–Ω—É –¥–∏–∞–≥–æ–Ω–∞–ª–∏: ");
                    choice = scn.next();
                    for (Notebook notebook : noteboks) {
                        if (notebook.monitorDiagonal >= Integer.parseInt(choice)) {
                            System.out.println(notebook);
                        }
                    }
                    scn.close();
                    break;
                default:
                scn.close();
                    break;
            }
        } catch (Exception e) {
            System.out.println("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥!");
        }
        
    }
}
